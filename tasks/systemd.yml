---
- name: Check if user has lingering enabled.
  ansible.builtin.command:
    cmd: "ls /var/lib/systemd/linger"
  changed_when: false
  register: linger

- name: Enable linger for user {{ nc_user }}
  become: true
  ansible.builtin.command:
    cmd: "loginctl enable-linger {{ nc_user }}"
  changed_when: true
  when: "nc_user not in linger.stdout"

- name: Generate systemd units for {{ nc_pod_name }}.
  become_user: "{{ nc_user }}"
  containers.podman.podman_generate_systemd:
    name: "{{ nc_pod_name }}"
    dest: "/home/{{ nc_user }}/.config/systemd/user/"
    requires: "{{ pod_systemd_requires }}"
    after: "{{ pod_systemd_after }}"
    restart_policy: "on-failure"

- name: Ensure systemd units are started and enabled for {{ nc_pod_name }}.
  become_user: "{{ nc_user }}"
  ansible.builtin.systemd:
    scope: user
    daemon_reload: true
    name: "pod-{{ nc_pod_name }}"
    enabled: "{{ pod_systemd_enabled }}"
    state: started

- name: Ensure systemd service is copied for nextcloud cron job.
  become_user: "{{ nc_user }}"
  ansible.builtin.template:
    src: templates/cron-app.service.j2
    dest: /home/{{ nc_user }}/.config/systemd/user/{{ nc_pod_name }}-cron-app.service
    mode: "644"
    owner: "{{ nc_user }}"
    group: "{{ nc_user }}"

- name: Ensure systemd timer is copied for nextcloud cron job.
  become_user: "{{ nc_user }}"
  ansible.builtin.template:
    src: templates/cron-app.timer.j2
    dest: /home/{{ nc_user }}/.config/systemd/user/{{ nc_pod_name }}-cron-app.timer
    mode: "644"
    owner: "{{ nc_user }}"
    group: "{{ nc_user }}"

- name: Ensure systemd timer and service are stared and enabled for nextcloud cron job.
  become_user: "{{ nc_user }}"
  ansible.builtin.systemd:
    scope: user
    daemon_reload: true
    name: "{{ nc_pod_name }}-cron-app.timer"
    enabled: true
    state: started
