---
# nextcloud/tasks/backup.yml
- name: Ensure restic is installed.
  become: true
  ansible.builtin.dnf:
    name: restic
    state: present

- name: Check if restic repository already exists.
  ansible.builtin.stat:
    path: "{{ nc_backup_dir }}/{{ nc_pod_name }}"
  register: out_repo

- name: Attempt to initialize a repository.
  when: not out_repo.stat.exists
  block:
    - name: Ensure backup directory exists.
      become: true
      ansible.builtin.file:
        path: "{{ nc_backup_dir }}"
        state: directory
        owner: "{{ nc_user }}"
        group: "{{ nc_user }}"
        mode: "0755"

    - name: Ensure a password file exists.
      become_user: "{{ nc_user }}"
      ansible.builtin.copy:
        content: "{{ restic_password }}"
        dest: "{{ restic_password_file }}"
        owner: "{{ nc_user }}"
        group: "{{ nc_user }}"
        mode: "0600"

    - name: Ensure a restic repository has been initialized.
      become_user: "{{ nc_user }}"
      ansible.builtin.command:
        cmd: "restic init"
      changed_when: true
      environment:
        RESTIC_REPOSITORY: "{{ nc_backup_dir }}/{{ nc_pod_name }}"
        RESTIC_PASSWORD_FILE: "{{ restic_password_file }}"

- name: Install a helper script for restic-{{ nc_pod_name }}.
  become: true
  ansible.builtin.template:
    src: templates/restic-helper.j2
    dest: "{{ restic_helper }}"
    mode: "0700"
    owner: "{{ nc_user }}"
    group: "{{ nc_user }}"

- name: Ensure a logging directory exists.
  become: true
  ansible.builtin.file:
    path: "{{ nc_volumes_dir }}/log"
    state: directory
    mode: "0755"
    owner: "{{ nc_user }}"
    group: "{{ nc_user }}"

- name: Install a file in logrotate.d.
  become: true
  ansible.builtin.template:
    src: templates/logrotate.j2
    dest: /etc/logrotate.d/{{ nc_pod_name }}-backup
    mode: "0644"

- name: Copy backup script.
  become: true
  ansible.builtin.template:
    src: templates/pod-backup.j2
    dest: /usr/local/bin/{{ nc_pod_name }}-backup
    mode: "0700"
    owner: "{{ nc_user }}"
    group: "{{ nc_user }}"

- name: Copy systemd units.
  become_user: "{{ nc_user }}"
  ansible.builtin.template:
    src: templates/{{ item.src }}
    dest: /home/{{ nc_user }}/.config/systemd/user/{{ item.dest }}
    mode: "0644"
    owner: "{{ nc_user }}"
    group: "{{ nc_user }}"
  loop:
    - src: pod-backup.service.j2
      dest: "{{ nc_pod_name }}-backup.service"
    - src: pod-backup.timer.j2
      dest: "{{ nc_pod_name }}-backup.timer"

- name: Install systemd timer.
  become_user: "{{ nc_user }}"
  ansible.builtin.systemd:
    name: "{{ nc_pod_name }}-backup.timer"
    state: started
    enabled: true
    scope: user
    daemon-reload: true
